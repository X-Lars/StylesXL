<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xl="clr-namespace:StylesXL">

    <Style x:Key="ButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    
                    <Border x:Name="Border"
                            CornerRadius="{xl:StyleManager LayoutID=CornerRadius}">

                        <Rectangle Margin="1"
                                   RadiusX="{Binding ElementName=Border, Path=CornerRadius.TopLeft}"
                                   RadiusY="{Binding ElementName=Border, Path=CornerRadius.TopLeft}"
                                   StrokeThickness="1"
                                   Stroke="{xl:StyleManager BrushID=Tint}"
                                   StrokeDashArray="1 2"/>
                       
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey xl:Styles, Button}" TargetType="{x:Type Button}">

        <Setter Property="Background"      Value="{xl:StyleManager BrushID=Control}"/>
        <Setter Property="Foreground"      Value="{xl:StyleManager BrushID=Text}"/>
        <Setter Property="BorderBrush"     Value="{xl:StyleManager BrushID=Border}"/>
        <Setter Property="BorderThickness" Value="{xl:StyleManager LayoutID=BorderThickness}"/>

        <Setter Property="SnapsToDevicePixels"   Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle"      Value="{StaticResource ButtonFocusVisualStyle}"/>
        <Setter Property="MinHeight"             Value="23" />
        <Setter Property="MinWidth"              Value="75" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{xl:StyleManager LayoutID=CornerRadius}"
                            TextBlock.Foreground="{TemplateBinding Foreground}">

                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{xl:StyleManager BrushID=BorderPressed}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"  Value="{xl:StyleManager BrushID=ControlHighlight}"/>
                            <Setter Property="BorderBrush" Value="{xl:StyleManager BrushID=BorderHighlight}"/>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"  Value="{xl:StyleManager BrushID=ControlPressed}"/>
                            <Setter Property="BorderBrush" Value="{xl:StyleManager BrushID=BorderPressed}"/>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background"  Value="{xl:StyleManager BrushID=ControlDisabled}"/>
                            <Setter Property="BorderBrush" Value="{xl:StyleManager BrushID=BorderDisabled}"/>
                            <Setter Property="Foreground"  Value="{xl:StyleManager BrushID=TextDisabled}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="{ComponentResourceKey xl:Styles, Button}" TargetType="{x:Type Button}">

        <Setter Property="Background"      Value="{xl:StyleManager BrushID=Control}"/>
        <Setter Property="Foreground"      Value="{xl:StyleManager BrushID=Text}"/>
        <Setter Property="BorderBrush"     Value="{xl:StyleManager BrushID=Border}"/>
        <Setter Property="BorderThickness" Value="{xl:StyleManager LayoutID=BorderThickness}"/>

        <Setter Property="SnapsToDevicePixels"   Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle"      Value="{StaticResource ButtonFocusVisualStyle}"/>
        <Setter Property="MinHeight"             Value="23" />
        <Setter Property="MinWidth"              Value="75" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{xl:StyleManager LayoutID=CornerRadius}"
                            TextBlock.Foreground="{TemplateBinding Foreground}">
                        
                        <VisualStateManager.VisualStateGroups>
                            
                            <VisualStateGroup x:Name="CommonStates">
                                
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.25" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                
                                <VisualState x:Name="Normal"/>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Background).(Color)"
                                                                      Storyboard.TargetName="Border">

                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{xl:StyleManager BrushID=ControlHighlight}" />

                                        </ColorAnimationUsingKeyFrames>
                                        
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(BorderBrush).(Color)"
                                                                      Storyboard.TargetName="Border">

                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{xl:StyleManager BrushID=BorderHighlight}" />

                                        </ColorAnimationUsingKeyFrames>
                                        
                                        
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Background).(Color)"
                                                                      Storyboard.TargetName="Border">
                                            
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{xl:StyleManager BrushID=ControlPressed}"/>
                                            
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(BorderBrush).(Color)"
                                                                      Storyboard.TargetName="Border">
                                            
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{xl:StyleManager BrushID=BorderPressed}"/>
                                            
                                        </ColorAnimationUsingKeyFrames>
                                        
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Background).(Color)"
                                                                      Storyboard.TargetName="Border">

                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{xl:StyleManager BrushID=ControlDisabled}"/>

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(BorderBrush).(Color)"
                                                                      Storyboard.TargetName="Border">

                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{xl:StyleManager BrushID=BorderDisabled}"/>

                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <ContentPresenter Margin="{xl:StyleManager LayoutID=Margin}"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                        
                    </Border>
                    
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{xl:StyleManager BrushID=BorderPressed}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>